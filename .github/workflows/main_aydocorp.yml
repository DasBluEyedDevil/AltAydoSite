# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - AydoCorp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Create .env.local
        run: |
          cat > .env.local << 'EOF'
          # MongoDB connection string (vCore)
          MONGODB_URI=${{ secrets.MONGODB_URI }}

          # Email Configuration
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EMAIL_PORT=${{ secrets.EMAIL_PORT }}
          EMAIL_SECURE=${{ secrets.EMAIL_SECURE }}
          EMAIL_USER=${{ secrets.EMAIL_USER }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}

          # Microsoft Entra ID Configuration
          ENTRA_TENANT_ID=${{ secrets.ENTRA_TENANT_ID }}
          ENTRA_CLIENT_ID=${{ secrets.ENTRA_CLIENT_ID }}
          ENTRA_CLIENT_SECRET=${{ secrets.ENTRA_CLIENT_SECRET }}

          # NextAuth Configuration
          NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          EOF



      - name: Install deps and build
        run: |
          npm ci
          npm run build

      - name: Prepare deployment artifact (prefer standalone)
        run: |
          set -e
          mkdir -p deploy
          if [ -d .next/standalone ]; then
            echo "Using Next.js standalone output"
            # Copy standalone server (contains its own node_modules)
            cp -R .next/standalone/* deploy/
            # Ensure static assets and public are present
            mkdir -p deploy/.next
            cp -R .next/static deploy/.next/static
            if [ -d public ]; then cp -R public deploy/public; fi
            # package.json is optional but harmless
            cp package.json deploy/package.json
          else
            echo "Standalone output not found; falling back to full app (node_modules + npm start)"
            cp -R .next deploy/.next
            if [ -d public ]; then cp -R public deploy/public; fi
            cp package.json deploy/package.json
            cp package-lock.json deploy/package-lock.json || true
            # Include node_modules so Azure can run npm start without building
            cp -R node_modules deploy/node_modules
          fi
          # Avoid shipping unnecessary large folders
          find deploy -name "archive" -type d -prune -exec rm -rf {} + || true
          find deploy -name "Build Logs" -type d -prune -exec rm -rf {} + || true
          # Create zip
          (cd deploy && zip -qr ../release.zip .)

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip -q release.zip

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'AydoCorp'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E8F83D01518942F1B2B01381F804622F }}